{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x4753a079BCb1d28bEE42D8c1d0FBc700Db00e2E7",
    "txHash": "0x0b53f42db789dc3177b28f78d89aea1fcade519ba2aa7349f74d5ac23c629a6f"
  },
  "proxies": [
    {
      "address": "0xA11EB96aB51Ab1053572B5e8cE67DA7c55B74C0E",
      "txHash": "0x4193b52a9e32bc9cd66ba59b6f170a04bd678cdcfa966a7d6d56007806b4f412",
      "kind": "transparent"
    },
    {
      "address": "0x384CB67C5de4368602C21C6c29615687e049170A",
      "txHash": "0x6efbfeb69db079a9f5dd7d25d392aa35ecb596c58a2bb2e8c155169c3ca6c326",
      "kind": "transparent"
    },
    {
      "address": "0x7216b8a1321B150Ff8dbAeF8b179921AF7D99B6d",
      "txHash": "0x2dfd78e8c489760db1f410ebe399a3580c8e9376696c96939c31b5095c2ce47f",
      "kind": "transparent"
    },
    {
      "address": "0xA2030cF590d3a29eE91f6230d2125d3c6664a05a",
      "txHash": "0x01a618e5a14e7ca27f29782c16fb9b2ac39b5639991aea004ed3141558409ecb",
      "kind": "transparent"
    },
    {
      "address": "0xba63E3f0229Dc2a6e25D060E6cAa6c4068c8369D",
      "txHash": "0xb1760e64971e08fef63fb8ccaa765e8e228b98e4b20d58acac846d7ac838ab9c",
      "kind": "transparent"
    },
    {
      "address": "0x9A771056DD493cDB26Aad7e5Ae7AB6f4F9235e50",
      "txHash": "0x406c306c8ef91b39063d0b8da1242712870852e487d6aeaa51497602a36e0543",
      "kind": "transparent"
    },
    {
      "address": "0x72Ec3DaDfD6E0872b63BCE3F93ccBE87F17eCFDA",
      "txHash": "0x6275f00e6a364ebc4c364284924a691c64f4d155f8fd03f1279926dcaa3cfad2",
      "kind": "transparent"
    }
  ],
  "impls": {
    "fea602d122841c5336e34b396c33c8d26c308cd346f4fbad01ae513da0a09b9d": {
      "address": "0x50999C3bB993C2Ef49E103818Aff1a4E3F075599",
      "txHash": "0xb9e183ee2a8e0b5c503b201dc51345880120ab2698290afdebaed156b5b4135e",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:532"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)1774_storage",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:15"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:17"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:18"
          },
          {
            "label": "currentSupply",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:19"
          },
          {
            "label": "baseExtension",
            "offset": 0,
            "slot": "205",
            "type": "t_string_storage",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:20"
          },
          {
            "label": "notRevealedUri",
            "offset": 0,
            "slot": "206",
            "type": "t_string_storage",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:21"
          },
          {
            "label": "mintActive",
            "offset": 0,
            "slot": "207",
            "type": "t_bool",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:23"
          },
          {
            "label": "earlyMintActive",
            "offset": 1,
            "slot": "207",
            "type": "t_bool",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:24"
          },
          {
            "label": "revealed",
            "offset": 2,
            "slot": "207",
            "type": "t_bool",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:25"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "208",
            "type": "t_string_storage",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:27"
          },
          {
            "label": "merkleRoot",
            "offset": 0,
            "slot": "209",
            "type": "t_bytes32",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:28"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:32"
          },
          {
            "label": "addressMintedBalance",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:33"
          },
          {
            "label": "whitelistClaimed",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1774_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9ec8c939af5b6dfa4a9e2145eed55d6c9a53a7cf47806fa46892b1fd6b686a32": {
      "address": "0x97D7DDbB99f4A44D523D938f2d54854F181aF48d",
      "txHash": "0x610e8f7d3217b989d3d06065bbe9d5e5040996eae6f661dcbf90c4017e391673",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:532"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)1774_storage",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:15"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:17"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:18"
          },
          {
            "label": "currentSupply",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:19"
          },
          {
            "label": "baseExtension",
            "offset": 0,
            "slot": "205",
            "type": "t_string_storage",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:20"
          },
          {
            "label": "notRevealedUri",
            "offset": 0,
            "slot": "206",
            "type": "t_string_storage",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:21"
          },
          {
            "label": "mintActive",
            "offset": 0,
            "slot": "207",
            "type": "t_bool",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:23"
          },
          {
            "label": "earlyMintActive",
            "offset": 1,
            "slot": "207",
            "type": "t_bool",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:24"
          },
          {
            "label": "revealed",
            "offset": 2,
            "slot": "207",
            "type": "t_bool",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:25"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "208",
            "type": "t_string_storage",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:27"
          },
          {
            "label": "merkleRoot",
            "offset": 0,
            "slot": "209",
            "type": "t_bytes32",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:28"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:30"
          },
          {
            "label": "addressMintedBalance",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:31"
          },
          {
            "label": "whitelistClaimed",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AppWorks_J",
            "src": "contracts/AppWorks.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1774_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5a6a500c9db8096d032324728dbb0536d58ea9ce1d03689b0df1039ca3e43b05": {
      "address": "0xc93C8CAf58aCF126aB971081a8e9d52D2F6465aC",
      "txHash": "0xb27d61ec7b5e6ab58a54b20f48817eb5782ce2687ae18a167f05c27b9889df15",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:532"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)1774_storage",
            "contract": "AppWorks",
            "src": "contracts/AppWorks.sol:15"
          },
          {
            "label": "value",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "AppWorks",
            "src": "contracts/AppWorks.sol:17"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "AppWorks",
            "src": "contracts/AppWorks.sol:18"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "AppWorks",
            "src": "contracts/AppWorks.sol:19"
          },
          {
            "label": "currentSupply",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "AppWorks",
            "src": "contracts/AppWorks.sol:20"
          },
          {
            "label": "baseExtension",
            "offset": 0,
            "slot": "206",
            "type": "t_string_storage",
            "contract": "AppWorks",
            "src": "contracts/AppWorks.sol:21"
          },
          {
            "label": "notRevealedUri",
            "offset": 0,
            "slot": "207",
            "type": "t_string_storage",
            "contract": "AppWorks",
            "src": "contracts/AppWorks.sol:22"
          },
          {
            "label": "mintActive",
            "offset": 0,
            "slot": "208",
            "type": "t_bool",
            "contract": "AppWorks",
            "src": "contracts/AppWorks.sol:24"
          },
          {
            "label": "earlyMintActive",
            "offset": 1,
            "slot": "208",
            "type": "t_bool",
            "contract": "AppWorks",
            "src": "contracts/AppWorks.sol:25"
          },
          {
            "label": "revealed",
            "offset": 2,
            "slot": "208",
            "type": "t_bool",
            "contract": "AppWorks",
            "src": "contracts/AppWorks.sol:26"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "209",
            "type": "t_string_storage",
            "contract": "AppWorks",
            "src": "contracts/AppWorks.sol:28"
          },
          {
            "label": "merkleRoot",
            "offset": 0,
            "slot": "210",
            "type": "t_bytes32",
            "contract": "AppWorks",
            "src": "contracts/AppWorks.sol:29"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "AppWorks",
            "src": "contracts/AppWorks.sol:31"
          },
          {
            "label": "addressMintedBalance",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AppWorks",
            "src": "contracts/AppWorks.sol:32"
          },
          {
            "label": "whitelistClaimed",
            "offset": 0,
            "slot": "213",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AppWorks",
            "src": "contracts/AppWorks.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1774_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
